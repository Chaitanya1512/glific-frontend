name: Cypress Test

on:
  push:
    branches: [master, v1.0, feature/cypress-coverage]

jobs:
  glific:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12 # postgres image for test database.
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: glific_dev
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      matrix: # build matrix for the job
        elixir: [1.11.3]
        otp: [23.2.7]
        node-version: [15.11.0]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # frontend setup
      - name: Setup frontend
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup elixir
        uses: erlef/setup-elixir@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      # cypress setup
      - name: Setup cypress
        run: |
          ls
          echo clone cypress repo
          git clone https://github.com/glific/cypress-testing.git
          echo done. go to dir.
          cd cypress-testing
          echo Copy Cypress.json from example
          cp cypress.json.example cypress.json
          yarn install
          cd ../

        # frontend setup
      - name: Setup frontend
        run: |
          ls
          echo copy env file.
          cp .env.example .env
          sed -i 's/4001/4000/g' .env
          echo done.
          cat /proc/sys/fs/inotify/max_user_watches
          echo set watchers
          sudo sysctl fs.inotify.max_user_watches=524288
          sudo sysctl -p
          cat /proc/sys/fs/inotify/max_user_watches
          echo start yarn setup.
          yarn setup
          echo done.
          cd ../

      # backend setup
      - name: Setup backend
        run: |
          ls
          echo clone glific repo
          git clone https://github.com/glific/glific.git
          git checkout tags/v1.5.0
          echo done. go to dir.
          cd glific
          echo done. start dev.secret.exs config
          cd config
          cp dev.secret.exs.txt dev.secret.exs
          sed -i 's/:max_rate_limit_request, 60/:max_rate_limit_request, 300/g' config.exs
          echo copy done. start setup
          cd ../
          cd assets
          rm -rf package-lock.json
          npm install
          cd ../
          echo install mix dependencies if not Cached
          mix local.rebar --force
          mix local.hex --force
          mix hex.organization auth oban --key ${{ secrets.OBAN_PRO_KEY }}
          mix deps.get
          echo start mix setup
          mix setup
          echo done. start installing inotify-tools
          sudo apt-get install inotify-tools
          cd ../

        # Run frontend
      - name: run glific-frontend
        run: |
          ls -la
          yarn start &

        # Run backend
      - name: run glific
        run: |
          ls -la
          cd glific
          mix phx.server &

      - name: Wait for 1 minute for the frontend to start
        run: |
          sleep 1m

        # Run cypress
      - name: Cypress run
        run: |
          cd cypress-testing
          yarn cy:run
